var apiName = "API: Math";
var apiVersion = "1.0";
var apiVersionCode = 100;
var CIMath = {};
var apims,codems2,codems3;
var apimb = false;
var apimb2 = false;
var apimn = 0;
var apimn2 = 0;
var apima = new Array();
var apima2 = new Array();

CIMath.random = function(a) {
	return Math.random() * a;
}

CIMath.randomCut = function(a) {
	return Math.floor(Math.random() * (a + 1));
}

CIMath.range = function(x, y, z) {
	if(typeof(x) == "number" && typeof(y) == "number" && typeof(z) == "number")
		return Math.hypot(x, y, z);
	else if(typeof(x) == "number" && typeof(y) == "number")
		return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));
	else
		return null;
}

CIMath.rangeGap = function(x, y, z, x2, y2, z2) {
	if(typeof(x) == "number" && typeof(y) == "number" && typeof(z) == "number" && typeof(x2) == "number" && typeof(y2) == "number" && typeof(z2) == "number")
		return Math.hypot(Math.abs(x - x2), Math.abs(y - y2), Math.abs(z - z2));
	else
		return null;
}

CIMath.avg = function(a, b, c) {
	if(typeof(b) != "number" || typeof(a) != "number") {
		return null;
	}else if(typeof(c) != "number") {
		return (a + b) / 2;
	}else {
		return (a + b + c) / 3;
	}
}

CIMath.avgArray = function(ary) {
	if(typeof(ary) == "object") {
		apimn = 0;
		apimn2 = 0;
		for(var e in ary) {
			if(typeof(e) == "number") {
				apimn += ary[e];
				apimn2++;
			}
		}
		return apimn / apimn2;
	}else if(typeof(ary) == "number")
		return ary;
	else
		return null;
}

CIMath.avgAG = function(a, b) {
	if(typeof(a) == "number" && typeof(b) == "number")
		return Math.sqrt(a * b);
	else
		return null;
}

CIMath.absRangeX = function(y, p) {
	return (-1 * Math.sin(y / 180 * Math.PI) * Math.cos(p / 180 * Math.PI));
}

CIMath.absRangeY = function(y, p) {
	return (Math.sin(-p / 180 * Math.PI));
}

CIMath.absRangeZ = function(y, p) {
	return (Math.cos(y / 180 * Math.PI) * Math.cos(p / 180 * Math.PI));
}

CIMath.yaw = function(x, y, z) {
	if(typeof(x) == "number" && typeof(y) == "number" && typeof(z) == "number") {
		var apil = Math.sqrt(Math.pow(x, 2)+Math.pow(z, 2));
		var apisinHorizontal = x/apil;
		var apicosHorizontal = z/apil;
		var apitanHorizontal = x/apiz;
		var apiacosHorizontal = Math.acos(z/apil)*180/Math.PI;
		var apiatanVertical = Math.atan(y/apil);
		var alpha = 0;
		if(apisinHorizontal > 0 && apicosHorizontal > 0 && apitanHorizontal > 0) alpha = 360-apiacosHorizontal;
		else if(apisinHorizontal > 0 && apicosHorizontal < 0 && apitanHorizontal < 0) alpha = 360-apiacosHorizontal;
		else if(apisinHorizontal < 0 && apicosHorizontal < 0 && apitanHorizontal > 0) alpha = apiacosHorizontal;
		else if(apisinHorizontal < 0 && apicosHorizontal > 0 && apitanHorizontal < 0) alpha = apiacosHorizontal;
		else if(apicosHorizontal == 1) alpha = 0;
		else if(apisinHorizontal == 1) alpha = 90;
		else if(apicosHorizontal == -1) alpha = 180;
		else if(apisinHorizontal == -1) alpha = 270;
		else if(apisinHorizontal == 0 && apicosHorizontal == 1 && apitanHorizontal == 0) null;
		return alpha;
	}else
		return null;
}

CIMath.pitch = function(x, y, z) {
	if(typeof(x) == "number" && typeof(y) == "number" && typeof(z) == "number")
		return -1 * Math.atan(y / Math.sqrt(Math.pow(x, 2)+Math.pow(z, 2))) * 180 / Math.PI;
	else
		return null;
}

CIMath.fct = function(n) {
	if(typeof(n) != "number" || Math.floor(n) != n || Math.abs(n) != n) {
		return null;
	}else {
		apimn = 1;
		for(var e = n; e > 0; e--) {
			apimn = apimn * e;
		}
		return e;
	}
}
